name: Installation Tests

on:
  push:
    branches: [ main, master, clean_up ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:
    inputs:
      test_type:
        description: 'Type of test to run'
        required: true
        type: choice
        options:
          - syntax-check
          - smoke-test
          - full-test
          - single-script
      script_name:
        description: 'Script name (for single-script mode)'
        required: false

jobs:
  test:
    runs-on: ubuntu-latest
    
    container:
      image: archlinux:latest
      
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Arch environment
      run: |
        pacman -Syu --noconfirm
        pacman -S --needed --noconfirm \
          base base-devel \
          fish git curl wget \
          sudo
          
        # Setup sudo for non-root user
        echo '%wheel ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers
        useradd -m -G wheel github
        echo "‚úÖ Environment setup complete"
      
    - name: Make scripts executable
      run: |
        cd "$GITHUB_WORKSPACE"
        chmod +x *.fish
        echo "‚úÖ Made all scripts executable"
      
    - name: Syntax Check
      if: github.event.inputs.test_type == 'syntax-check' || github.event_name == 'push'
      run: |
        cd "$GITHUB_WORKSPACE"
        
        echo "üîç Checking Fish syntax..."
        failed_count=0
        total_count=0
        
        for script in *.fish; do
          total_count=$((total_count + 1))
          if fish -n "$script" 2>/dev/null; then
            echo "‚úÖ $script"
          else
            echo "‚ùå $script"
            failed_count=$((failed_count + 1))
          fi
        done
        
        echo ""
        echo "üìä Results: $((total_count - failed_count))/$total_count passed"
        
        if [ $failed_count -gt 0 ]; then
          echo "‚ö†Ô∏è  $failed_count scripts have syntax errors"
          exit 1
        fi
      
    - name: Smoke Test
      if: github.event.inputs.test_type == 'smoke-test'
      run: |
        cd "$GITHUB_WORKSPACE"
        
        echo "üî• Running smoke tests..."
        
        # Test simple utilities
        runuser -l github -c "cd $GITHUB_WORKSPACE && yes n | timeout 60 ./htop.fish" || true
        runuser -l github -c "cd $GITHUB_WORKSPACE && yes n | timeout 60 ./netcat.fish" || true
        
        echo "‚úÖ Smoke tests completed"
      
    - name: Full Test
      if: github.event.inputs.test_type == 'full-test'
      run: |
        cd "$GITHUB_WORKSPACE"
        
        echo "üöÄ Running full installation tests..."
        
        # List of scripts to test in order
        scripts=(
          "htop.fish"
          "netcat.fish"
          "chromium.fish"
          "vlc.fish"
          "kubectl.fish"
          "wrk.fish"
        )
        
        for script in "${scripts[@]}"; do
          echo "üì¶ Testing $script..."
          runuser -l github -c "cd $GITHUB_WORKSPACE && yes n | timeout 120 ./$script" || echo "‚ö†Ô∏è  $script failed or skipped"
        done
        
        echo "‚úÖ Full test completed"
      
    - name: Single Script Test
      if: github.event.inputs.test_type == 'single-script'
      run: |
        cd "$GITHUB_WORKSPACE"
        
        script="${{ github.event.inputs.script_name }}"
        if [ -z "$script" ]; then
          echo "‚ùå No script name provided"
          exit 1
        fi
        
        if [ ! -f "$script" ]; then
          echo "‚ùå Script $script not found"
          exit 1
        fi
        
        echo "üéØ Running $script..."
        runuser -l github -c "cd $GITHUB_WORKSPACE && yes n | timeout 300 ./$script" || echo "‚ö†Ô∏è  Script execution completed"
        echo "‚úÖ Script test completed"

