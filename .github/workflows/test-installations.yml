name: Test CachyOS Installations

on:
  push:
    branches: [ main, master, clean_up ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  test-installations:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        # Test different shells and scenarios
        test-set: [core, full]
    
    container:
      image: archlinux:latest
      
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Update system and install base dependencies
      run: |
        pacman -Syu --noconfirm
        pacman -S --needed --noconfirm \
          base base-devel \
          git curl wget \
          fish sudo which \
          openssl zlib bzip2
      
    - name: Configure sudo for GitHub Actions user
      run: |
        echo 'root ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers
        echo 'github ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers
      
    - name: Create non-root user for testing
      run: |
        useradd -m -G wheel github
        echo 'github ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers.d/github
        chmod 0440 /etc/sudoers.d/github
      
    - name: Make all scripts executable
      run: |
        cd "$GITHUB_WORKSPACE"
        chmod +x *.fish
      
    - name: Test Core Installations (Matrix: core)
      if: matrix.test-set == 'core'
      run: |
        runuser -l github -c "cd '$GITHUB_WORKSPACE' && yes n | ./git_setup.fish" &
        sudo -u github bash -c "cd '$GITHUB_WORKSPACE' && yes n | ./htop.fish" &
        sudo -u github bash -c "cd '$GITHUB_WORKSPACE' && yes n | ./netcat.fish" &
        wait
        
        # Verify installations
        which htop nc
        
    - name: Test Full Installation (Matrix: full)
      if: matrix.test-set == 'full'
      run: |
        # Run installations as the GitHub user
        cd "$GITHUB_WORKSPACE"
        
        # Core system utilities
        runuser -l github -c "cd $GITHUB_WORKSPACE && yes n | ./htop.fish" || true
        runuser -l github -c "cd $GITHUB_WORKSPACE && yes n | ./netcat.fish" || true
        
        # Containers
        runuser -l github -c "cd $GITHUB_WORKSPACE && yes n | ./podman.fish" || true
        
        # Browsers
        runuser -l github -c "cd $GITHUB_WORKSPACE && yes n | ./chromium.fish" || true
        
        # Editors (with timeout to avoid hanging)
        timeout 300 runuser -l github -c "cd $GITHUB_WORKSPACE && yes n | ./cursor.fish" || true
        timeout 300 runuser -l github -c "cd $GITHUB_WORKSPACE && yes n | ./emacs.fish" || true
        timeout 300 runuser -l github -c "cd $GITHUB_WORKSPACE && yes n | ./doom_emacs.fish" || true
        
        # Language tools
        runuser -l github -c "cd $GITHUB_WORKSPACE && yes n | ./mise.fish" || true
        timeout 600 runuser -l github -c "cd $GITHUB_WORKSPACE && yes n | ./elixir_and_erlang.fish" || true
        
        # Communication tools
        timeout 300 runuser -l github -c "cd $GITHUB_WORKSPACE && yes n | ./postman.fish" || true
        timeout 300 runuser -l github -c "cd $GITHUB_WORKSPACE && yes n | ./slack.fish" || true
        timeout 300 runuser -l github -c "cd $GITHUB_WORKSPACE && yes n | ./webcord.fish" || true
        
        # Networking
        runuser -l github -c "cd $GITHUB_WORKSPACE && yes n | ./wireshark.fish" || true
        runuser -l github -c "cd $GITHUB_WORKSPACE && yes n | ./wrk.fish" || true
        
        # Cloud/Infrastructure
        runuser -l github -c "cd $GITHUB_WORKSPACE && yes n | ./cuda.fish" || true
        runuser -l github -c "cd $GITHUB_WORKSPACE && yes n | ./dbeaver.fish" || true
        runuser -l github -c "cd $GITHUB_WORKSPACE && yes n | ./kubectl.fish" || true
        runuser -l github -c "cd $GITHUB_WORKSPACE && yes n | ./ngrok.fish" || true
        
        # AI & Media
        timeout 300 runuser -l github -c "cd $GITHUB_WORKSPACE && yes n | ./ollama.fish" || true
        runuser -l github -c "cd $GITHUB_WORKSPACE && yes n | ./vlc.fish" || true
        runuser -l github -c "cd $GITHUB_WORKSPACE && yes n | ./pdf_support.fish" || true
        runuser -l github -c "cd $GITHUB_WORKSPACE && yes n | ./exiftool.fish" || true
        runuser -l github -c "cd $GITHUB_WORKSPACE && yes n | ./vivaldi.fish" || true
        
    - name: Verify installations
      run: |
        echo "=== Verifying installations ==="
        
        # Check basic tools
        echo "Checking basic tools..."
        which htop && echo "✓ htop" || echo "✗ htop"
        which nc && echo "✓ netcat" || echo "✗ netcat"
        which vim || which nano && echo "✓ editor" || echo "✗ editor"
        
        # Check if installations created expected directories/files
        echo "Checking for installed tools..."
        ls -la ~/.local/bin/ 2>/dev/null || echo "~/.local/bin doesn't exist yet"
        ls -la ~/.config/ 2>/dev/null || echo "~/.config doesn't exist yet"
        
    - name: Test healthcheck
      continue-on-error: true
      run: |
        if [ -f Makefile ]; then
          cd $GITHUB_WORKSPACE
          make healthcheck || echo "Healthcheck completed with some failures (expected in CI)"
        fi
      
    - name: Upload logs on failure
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: installation-logs
        path: |
          /tmp/*.log
          /var/log/*
        if-no-files-found: ignore
        retention-days: 7

